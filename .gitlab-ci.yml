stages:
  - test
  - coverage
  - deploy

before_script:
    #- module purge
  - export LANG=C
  - ulimit -s unlimited
  - ulimit -v unlimited
    #- module load git
  - echo "HOST " $(hostname)
    #  - module list
    #  - source .ci-env-vars


# For some reason sometimes not-writable files remain, which cause trouble the
# next time a runner tries to clean-up
after_script:
  - chmod u+w -R .

########################################################################################
#
# jobs for intel/gfortran double/single precision mpi and no openmp no cuda KNL
# - all runners on "cpu"
# - including coverage runs
#
########################################################################################
# intel double precision mpi noomp AVX512
intel-double-precision-mpi-noomp-avx512-jobs:
  tags:
    - avx512
  script:
    - ./autogen.sh
      #- export MKL_INTEL_SCALAPACK_LDFLAGS_MPI_NO_OMP="-L$MKLROOT/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lmkl_blacs_intelmpi_lp64 -lpthread  -Wl,-rpath,$MKLROOT/lib/intel64"
      #- export MKL_INTEL_SCALAPACK_FCFLAGS_MPI_NO_OMP="-I$MKLROOT/include/intel64/lp64"
      #- pwd
    - srun -n 1 --partition=gp --nodelist=gp02 --time=40 /scratch/elpa/bin/configure_elpa.sh "FC=mpiifort CC=mpiicc --enable-option-checking=fatal CFLAGS=\"-O3 -xCORE-AVX512\" FCFLAGS=\"-O3 -CORE-AVX512\" SCALAPACK_LDFLAGS=\"\$MKL_INTEL_SCALAPACK_LDFLAGS_MPI_NO_OMP\" SCALAPACK_FCFLAGS=\"\$MKL_INTEL_SCALAPACK_FCFLAGS_MPI_NO_OMP\" --enable-avx512"
    - srun -n 1 -c 8 --partition=gp --nodelist=gp02 --time=40 /scratch/elpa/bin/build_elpa.sh
    - srun -n 1 --partition=gp --nodelist=gp02 --time=40 /scratch/elpa/bin/run_elpa.sh 2 "TEST_FLAGS=\"150 50 16\""
#   - export LD_LIBRARY_PATH=$MKLROOT/lib/intel64:$LD_LIBRARY_PATH
#   - make check TASKS=2 TEST_FLAGS='150 50 16' || { cat test-suite.log; exit 1; }
#    - grep -i "Expected %stop" test-suite.log && exit 1 || true ;
#    - gpschedule -d $GPJOBID

      ## intel double precision mpi noomp AVX512
      #intel-double-precision-mpi-noomp-avx512-jobs:
      #  tags:
      #    - knl
      #  script:
      #    - ./autogen.sh
      #      #- export MKL_INTEL_SCALAPACK_LDFLAGS_MPI_NO_OMP="-L$MKLROOT/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lmkl_blacs_intelmpi_lp64 -lpthread  -Wl,-rpath,$MKLROOT/lib/intel64"
      #      #- export MKL_INTEL_SCALAPACK_FCFLAGS_MPI_NO_OMP="-I$MKLROOT/include/intel64/lp64"
      #      #- pwd
      #    - srun -n 1 --partition=knl --nodelist=knl1 --time=40 /scratch/elpa/bin/configure_elpa.sh "FC=mpiifort CC=mpiicc --enable-option-checking=fatal CFLAGS=\"-O3 -mtune=knl -xMIC-AVX512\" FCFLAGS=\"-O3 -axMIC-AVX512\" SCALAPACK_LDFLAGS=\"\$MKL_INTEL_SCALAPACK_LDFLAGS_MPI_NO_OMP\" SCALAPACK_FCFLAGS=\"\$MKL_INTEL_SCALAPACK_FCFLAGS_MPI_NO_OMP\" --enable-avx512"
      #    - srun -n 1 -c 8 --partition=knl --nodelist=knl1 --time=40 /scratch/elpa/bin/build_elpa.sh
      #    - export tasks=2
      #    - srun -n $tasks --partition=knl --nodelist=knl1 --time=40 /scratch/elpa/bin/run_elpa.sh $tasks "TEST_FLAGS=\"150 50 16\""
      ##   - export LD_LIBRARY_PATH=$MKLROOT/lib/intel64:$LD_LIBRARY_PATH
      ##   - make check TASKS=2 TEST_FLAGS='150 50 16' || { cat test-suite.log; exit 1; }
      ##    - grep -i "Expected %stop" test-suite.log && exit 1 || true ;
      ##    - gpschedule -d $GPJOBID

# print coverage results
total_coverage:
  only:
    - /.*master.*/
  stage: coverage
  tags:
    - coverage
  script:
    - echo "Generating coverage report"
    - ./ci_coverage_summary
  artifacts:
    paths:
      - public

pages:
  stage: deploy
  tags:
    - coverage
  script:
    - echo "Publishing pages"
  artifacts:
    paths:
      - public
  only:
    - master
